swagger: "2.0"
info:
  version: "1.0.0"
  title: "User Authentication API"

basePath: "/api/user"
tags:
  - name: "User"
    description: "Endpoints for regular users"
  - name: "Auth"
    description: "Endpoints for user authentication"

paths:
  /users:
    get:
      tags:
        - "User"
      summary: "Get all users"
      produces:
        - "application/json"
      operationId: "getUsers"
      security:
        - ADMIN: []
      parameters:
        - name: "search"
          in: "query"
          description: "Search string"
          required: false
          type: "string"
        - name: "sort"
          in: "query"
          description: "Sort column"
          required: false
          type: "string"
        - name: "order"
          in: "query"
          description: "Sort order"
          required: false
          type: "string"
          enum:
            - "asc"
            - "desc"
          default: "asc"
        - name: "limit"
          in: "query"
          description: "Limit number of results"
          required: false
          type: "integer"
          format: "int64"
        - name: "offset"
          in: "query"
          description: "Start index of results"
          required: false
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Successful retrieval of users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/UserList"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

  # /user:
  #   get:
  #     tags:
  #       - "User"
  #     summary: "Get user by id"
  #     produces:
  #       - "application/json"
  #     operationId: "getUser"
  #     security:
  #       - USER: []
  #     responses:
  #       200:
  #         description: "Successful retrieval of user"
  #         schema:
  #           $ref: "#/definitions/UserProfile"
  #       401:
  #         description: "Unauthorized"
  #       403:
  #         description: "Forbidden"
  #       404:
  #         description: "Not Found"
  #   put:
  #     tags:
  #       - "User"
  #     summary: "Update user by id"
  #     produces:
  #       - "application/json"
  #     operationId: "updateUser"
  #     security:
  #       - USER: []
  #     parameters:
  #       - name: "user"
  #         in: "body"
  #         description: "User object"
  #         required: true
  #         schema:
  #           $ref: "#/definitions/UserInList"
  #     responses:
  #       200:
  #         description: "Successful update of user"
  #         schema:
  #           $ref: "#/definitions/UserCreatedResponse"
  #       401:
  #         description: "Unauthorized"
  #       403:
  #         description: "Forbidden"
  #       404:
  #         description: "Not Found"
  #   delete:
  #     tags:
  #       - "User"
  #     summary: "Delete user by id"
  #     produces:
  #       - "application/json"
  #     operationId: "deleteUser"
  #     security:
  #       - USER: []
  #     responses:
  #       200:
  #         description: "Successful deletion of user"
  #         schema:
  #           $ref: "#/definitions/Response"
  #       401:
  #         description: "Unauthorized"
  #       403:
  #         description: "Forbidden"
  #       404:
  #         description: "Not Found"

  /signIn:
    post:
      tags:
        - "Auth"
      summary: "Sign in user"
      produces:
        - "application/json"
      operationId: "logIn"
      parameters:
        - name: "user"
          in: "body"
          description: "User object"
          required: true
          schema:
            $ref: "#/definitions/UserSignInRequest"
      responses:
        200:
          description: "User signed in"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
        - "Auth"
      summary: "Sign out user"
      produces:
        - "application/json"
      operationId: "logOut"
      security:
        - USER: []
      responses:
        200:
          description: "User signed out"
          schema:
            $ref: "#/definitions/Response"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

  /register:
    post:
      tags:
        - "Auth"
      summary: "Create a new user"
      produces:
        - "application/json"
      operationId: "registerUser"
      parameters:
        - name: "user"
          in: "body"
          description: "User object"
          required: true
          schema:
            $ref: "#/definitions/UserRegisterRequest"
      responses:
        201:
          description: "User created"
          schema:
            $ref: "#/definitions/UserCreatedResponse"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"

securityDefinitions:
  USER:
    type: apiKey
    in: header
    name: X-Csrf-Token
  ADMIN:
    type: apiKey
    in: header
    name: X-Csrf-Token

definitions:
  UserRegisterRequest:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    required:
      - username
      - email
      - password

  UserSignInRequest:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    required:
      - username
      - password

  UserProfile:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role:
        type: "string"
        enum:
          - "admin"
          - "user"
      languages:
        type: "array"
        items:
          $ref: "#/definitions/UserLanguageProfile"
      interests:
        type: "array"
        items:
          type: "string"
    required:
      - id
      - username
      - email

  UserLanguageProfile:
    type: "object"
    properties:
      language:
        type: "string"
      actions:
        type: "array"
        items:
          type: "string"
    required:
      - language
      - actions

  UserList:
    type: "object"
    properties:
      users:
        type: "array"
        items:
          $ref: "#/definitions/UserInList"
      total:
        type: "integer"
        format: "int64"
    required:
      - users
      - total

  UserInList:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      role:
        type: "string"
        enum:
          - "admin"
          - "user"
    required:
      - id
      - username
      - email

  UserCreatedResponse:
    type: "object"
    properties:
      token:
        type: "string"
      message:
        type: "string"
      createdId:
        type: "integer"
        format: "int64"
    required:
      - token
      - message
      - createdId

  Response:
    type: "object"
    properties:
      token:
        type: "string"
      message:
        type: "string"
    required:
      - token
      - message
